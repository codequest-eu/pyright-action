// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`no comments > failure > command.issueCommand 1`] = `[]`;

exports[`no comments > failure > core.error 1`] = `[]`;

exports[`no comments > failure > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
]
`;

exports[`no comments > failure > core.setFailed 1`] = `
[
  [
    "Exit code 1",
  ],
]
`;

exports[`no comments > failure > core.warning 1`] = `[]`;

exports[`no comments > failure > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`no comments > failure > fs.existsSync 1`] = `[]`;

exports[`no comments > failure > fs.readFileSync 1`] = `[]`;

exports[`no comments > failure > process.chdir 1`] = `
[
  [
    "/some/wd",
  ],
]
`;

exports[`no comments > success > command.issueCommand 1`] = `[]`;

exports[`no comments > success > core.error 1`] = `[]`;

exports[`no comments > success > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
]
`;

exports[`no comments > success > core.setFailed 1`] = `[]`;

exports[`no comments > success > core.warning 1`] = `[]`;

exports[`no comments > success > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`no comments > success > fs.existsSync 1`] = `[]`;

exports[`no comments > success > fs.readFileSync 1`] = `[]`;

exports[`no comments > success > process.chdir 1`] = `
[
  [
    "/some/wd",
  ],
]
`;

exports[`thrown error at first call > command.issueCommand 1`] = `[]`;

exports[`thrown error at first call > core.error 1`] = `[]`;

exports[`thrown error at first call > core.info 1`] = `[]`;

exports[`thrown error at first call > core.setFailed 1`] = `
[
  [
    [Error: oops],
  ],
]
`;

exports[`thrown error at first call > core.warning 1`] = `[]`;

exports[`thrown error at first call > cp.spawnSync 1`] = `[]`;

exports[`thrown error at first call > fs.existsSync 1`] = `[]`;

exports[`thrown error at first call > fs.readFileSync 1`] = `[]`;

exports[`thrown error at first call > process.chdir 1`] = `[]`;

exports[`with comments > errors > command.issueCommand 1`] = `
[
  [
    "error",
    {
      "col": 1,
      "file": "/path/to/file1.py",
      "line": 1,
    },
    "some error",
  ],
  [
    "error",
    {
      "col": 10,
      "file": "/path/to/file1.py",
      "line": 6,
    },
    "some error",
  ],
]
`;

exports[`with comments > errors > core.error 1`] = `[]`;

exports[`with comments > errors > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "/path/to/file1.py:1:1 - error: some error",
  ],
  [
    "/path/to/file2.py: warning: some warning",
  ],
  [
    "/path/to/file3.py:1:1 - information: some info (reportSomeInformation)",
  ],
  [
    "/path/to/file3.py: warning: another warning (reportSomeWarning)",
  ],
  [
    "/path/to/file1.py:6:10 - error: some error",
  ],
  [
    "2 errors, 2 warnings, 1 information",
  ],
]
`;

exports[`with comments > errors > core.setFailed 1`] = `
[
  [
    "2 errors",
  ],
]
`;

exports[`with comments > errors > core.warning 1`] = `[]`;

exports[`with comments > errors > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > errors > fs.existsSync 1`] = `[]`;

exports[`with comments > errors > fs.readFileSync 1`] = `[]`;

exports[`with comments > errors > process.chdir 1`] = `[]`;

exports[`with comments > errors,warnings > command.issueCommand 1`] = `
[
  [
    "error",
    {
      "col": 1,
      "file": "/path/to/file1.py",
      "line": 1,
    },
    "some error",
  ],
  [
    "warning",
    {
      "col": 1,
      "file": "/path/to/file2.py",
      "line": 1,
    },
    "some warning",
  ],
  [
    "warning",
    {
      "col": 1,
      "file": "/path/to/file3.py",
      "line": 1,
    },
    "another warning (reportSomeWarning)",
  ],
  [
    "error",
    {
      "col": 10,
      "file": "/path/to/file1.py",
      "line": 6,
    },
    "some error",
  ],
]
`;

exports[`with comments > errors,warnings > core.error 1`] = `[]`;

exports[`with comments > errors,warnings > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "/path/to/file1.py:1:1 - error: some error",
  ],
  [
    "/path/to/file2.py: warning: some warning",
  ],
  [
    "/path/to/file3.py:1:1 - information: some info (reportSomeInformation)",
  ],
  [
    "/path/to/file3.py: warning: another warning (reportSomeWarning)",
  ],
  [
    "/path/to/file1.py:6:10 - error: some error",
  ],
  [
    "2 errors, 2 warnings, 1 information",
  ],
]
`;

exports[`with comments > errors,warnings > core.setFailed 1`] = `
[
  [
    "2 errors",
  ],
]
`;

exports[`with comments > errors,warnings > core.warning 1`] = `[]`;

exports[`with comments > errors,warnings > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > errors,warnings > fs.existsSync 1`] = `[]`;

exports[`with comments > errors,warnings > fs.readFileSync 1`] = `[]`;

exports[`with comments > errors,warnings > process.chdir 1`] = `[]`;

exports[`with comments > failure > command.issueCommand 1`] = `[]`;

exports[`with comments > failure > core.error 1`] = `[]`;

exports[`with comments > failure > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
]
`;

exports[`with comments > failure > core.setFailed 1`] = `
[
  [
    "Exit code 2",
  ],
]
`;

exports[`with comments > failure > core.warning 1`] = `[]`;

exports[`with comments > failure > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > failure > fs.existsSync 1`] = `[]`;

exports[`with comments > failure > fs.readFileSync 1`] = `[]`;

exports[`with comments > failure > process.chdir 1`] = `[]`;

exports[`with comments > invalid stdout > command.issueCommand 1`] = `[]`;

exports[`with comments > invalid stdout > core.error 1`] = `[]`;

exports[`with comments > invalid stdout > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
]
`;

exports[`with comments > invalid stdout > core.setFailed 1`] = `
[
  [
    [ValitaError: missing_value at .generalDiagnostics (missing value) (+ 1 other issue)],
  ],
]
`;

exports[`with comments > invalid stdout > core.warning 1`] = `[]`;

exports[`with comments > invalid stdout > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > invalid stdout > fs.existsSync 1`] = `[]`;

exports[`with comments > invalid stdout > fs.readFileSync 1`] = `[]`;

exports[`with comments > invalid stdout > process.chdir 1`] = `[]`;

exports[`with comments > no diagnostics > command.issueCommand 1`] = `[]`;

exports[`with comments > no diagnostics > core.error 1`] = `[]`;

exports[`with comments > no diagnostics > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "0 errors, 0 warnings, 0 informations",
  ],
]
`;

exports[`with comments > no diagnostics > core.setFailed 1`] = `[]`;

exports[`with comments > no diagnostics > core.warning 1`] = `[]`;

exports[`with comments > no diagnostics > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > no diagnostics > fs.existsSync 1`] = `[]`;

exports[`with comments > no diagnostics > fs.readFileSync 1`] = `[]`;

exports[`with comments > no diagnostics > process.chdir 1`] = `[]`;

exports[`with comments > unparsable json > command.issueCommand 1`] = `[]`;

exports[`with comments > unparsable json > core.error 1`] = `[]`;

exports[`with comments > unparsable json > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
]
`;

exports[`with comments > unparsable json > core.setFailed 1`] = `
[
  [
    [SyntaxError: Unexpected token '}', "}" is not valid JSON],
  ],
]
`;

exports[`with comments > unparsable json > core.warning 1`] = `[]`;

exports[`with comments > unparsable json > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > unparsable json > fs.existsSync 1`] = `[]`;

exports[`with comments > unparsable json > fs.readFileSync 1`] = `[]`;

exports[`with comments > unparsable json > process.chdir 1`] = `[]`;

exports[`with comments > with 1 each > command.issueCommand 1`] = `
[
  [
    "error",
    {
      "col": 1,
      "file": "/path/to/file1.py",
      "line": 1,
    },
    "some error",
  ],
  [
    "warning",
    {
      "col": 1,
      "file": "/path/to/file2.py",
      "line": 1,
    },
    "some warning",
  ],
]
`;

exports[`with comments > with 1 each > core.error 1`] = `[]`;

exports[`with comments > with 1 each > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "/path/to/file1.py:1:1 - error: some error",
  ],
  [
    "/path/to/file2.py: warning: some warning",
  ],
  [
    "/path/to/file3.py:1:1 - information: some info (reportSomeInformation)",
  ],
  [
    "1 error, 1 warning, 1 information",
  ],
]
`;

exports[`with comments > with 1 each > core.setFailed 1`] = `
[
  [
    "1 error",
  ],
]
`;

exports[`with comments > with 1 each > core.warning 1`] = `[]`;

exports[`with comments > with 1 each > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > with 1 each > fs.existsSync 1`] = `[]`;

exports[`with comments > with 1 each > fs.readFileSync 1`] = `[]`;

exports[`with comments > with 1 each > process.chdir 1`] = `[]`;

exports[`with comments > with diagnostics > command.issueCommand 1`] = `
[
  [
    "error",
    {
      "col": 1,
      "file": "/path/to/file1.py",
      "line": 1,
    },
    "some error",
  ],
  [
    "warning",
    {
      "col": 1,
      "file": "/path/to/file2.py",
      "line": 1,
    },
    "some warning",
  ],
  [
    "warning",
    {
      "col": 1,
      "file": "/path/to/file3.py",
      "line": 1,
    },
    "another warning (reportSomeWarning)",
  ],
  [
    "error",
    {
      "col": 10,
      "file": "/path/to/file1.py",
      "line": 6,
    },
    "some error",
  ],
]
`;

exports[`with comments > with diagnostics > core.error 1`] = `[]`;

exports[`with comments > with diagnostics > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "/path/to/file1.py:1:1 - error: some error",
  ],
  [
    "/path/to/file2.py: warning: some warning",
  ],
  [
    "/path/to/file3.py:1:1 - information: some info (reportSomeInformation)",
  ],
  [
    "/path/to/file3.py: warning: another warning (reportSomeWarning)",
  ],
  [
    "/path/to/file1.py:6:10 - error: some error",
  ],
  [
    "2 errors, 2 warnings, 1 information",
  ],
]
`;

exports[`with comments > with diagnostics > core.setFailed 1`] = `
[
  [
    "2 errors",
  ],
]
`;

exports[`with comments > with diagnostics > core.warning 1`] = `[]`;

exports[`with comments > with diagnostics > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with comments > with diagnostics > fs.existsSync 1`] = `[]`;

exports[`with comments > with diagnostics > fs.readFileSync 1`] = `[]`;

exports[`with comments > with diagnostics > process.chdir 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json > core.error 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath --project /some/path/to/pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json > core.setFailed 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json > core.warning 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
      "--project",
      "/some/path/to/pyrightconfig.json",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json > fs.existsSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json > fs.readFileSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > core.error 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath --project /some/path/to/pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > core.setFailed 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > core.warning 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
      "--project",
      "/some/path/to/pyrightconfig.json",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > fs.existsSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > fs.readFileSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json bad json > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json directory > core.error 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json directory > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath --project /some/path/to",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > core.setFailed 1`] = `[]`;

exports[`with overridden flags > explicit pyrightconfig.json directory > core.warning 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "/some/path/to/pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
      "--project",
      "/some/path/to",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > fs.existsSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > fs.readFileSync 1`] = `
[
  [
    "/some/path/to/pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > explicit pyrightconfig.json directory > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json > core.error 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > core.setFailed 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json > core.warning 1`] = `
[
  [
    "pyrightconfig.json contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > fs.readFileSync 1`] = `
[
  [
    "pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > core.error 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > core.info 1`] = `
[
  [
    "pyright 1.1.350, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > core.setFailed 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > core.warning 1`] = `
[
  [
    "pyrightconfig.json contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > fs.readFileSync 1`] = `
[
  [
    "pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.350 > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > core.error 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > core.info 1`] = `
[
  [
    "pyright 1.1.351, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > core.setFailed 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > core.warning 1`] = `
[
  [
    "pyrightconfig.json contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > fs.readFileSync 1`] = `
[
  [
    "pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.351 > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > core.error 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > core.info 1`] = `
[
  [
    "pyright 1.1.352, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > core.setFailed 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > core.warning 1`] = `
[
  [
    "pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > fs.readFileSync 1`] = `
[
  [
    "pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.352 > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > core.error 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > core.info 1`] = `
[
  [
    "pyright 1.1.353, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > core.setFailed 1`] = `[]`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > core.warning 1`] = `
[
  [
    "pyrightconfig.json contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "pyrightconfig.json contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > fs.readFileSync 1`] = `
[
  [
    "pyrightconfig.json",
    "utf8",
  ],
]
`;

exports[`with overridden flags > implicit pyrightconfig.json 1.1.353 > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > pyproject.toml > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > pyproject.toml > core.error 1`] = `[]`;

exports[`with overridden flags > pyproject.toml > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > pyproject.toml > core.setFailed 1`] = `[]`;

exports[`with overridden flags > pyproject.toml > core.warning 1`] = `
[
  [
    "/some/wd/pyproject.toml contains { pythonPlatform: 'Linux' }; --pythonplatform as passed by pyright-action will have no effect.",
  ],
  [
    "/some/wd/pyproject.toml contains { pythonVersion: '3.9' }; --pythonversion as passed by pyright-action will have no effect.",
  ],
  [
    "/some/wd/pyproject.toml contains { typeshedPath: '/path/to/typeshed' }; --typeshedpath as passed by pyright-action will have no effect.",
  ],
  [
    "/some/wd/pyproject.toml contains { venvPath: '/path/to/venv' }; --venvpath as passed by pyright-action will have no effect.",
  ],
]
`;

exports[`with overridden flags > pyproject.toml > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > pyproject.toml > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
  [
    "/some/wd/is/deep/pyproject.toml",
  ],
  [
    "/some/wd/is/pyproject.toml",
  ],
  [
    "/some/wd/pyproject.toml",
  ],
]
`;

exports[`with overridden flags > pyproject.toml > fs.readFileSync 1`] = `
[
  [
    "/some/wd/pyproject.toml",
    "utf8",
  ],
]
`;

exports[`with overridden flags > pyproject.toml > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`with overridden flags > pyproject.toml bad toml > command.issueCommand 1`] = `[]`;

exports[`with overridden flags > pyproject.toml bad toml > core.error 1`] = `[]`;

exports[`with overridden flags > pyproject.toml bad toml > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd/is/deep",
  ],
  [
    "Running: /path/to/node --pythonplatform --pythonversion --typeshedpath --venvpath",
  ],
]
`;

exports[`with overridden flags > pyproject.toml bad toml > core.setFailed 1`] = `[]`;

exports[`with overridden flags > pyproject.toml bad toml > core.warning 1`] = `[]`;

exports[`with overridden flags > pyproject.toml bad toml > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "--pythonplatform",
      "--pythonversion",
      "--typeshedpath",
      "--venvpath",
    ],
    {
      "stdio": [
        "ignore",
        "inherit",
        "inherit",
      ],
    },
  ],
]
`;

exports[`with overridden flags > pyproject.toml bad toml > fs.existsSync 1`] = `
[
  [
    "pyrightconfig.json",
  ],
  [
    "/some/wd/is/deep/pyproject.toml",
  ],
  [
    "/some/wd/is/pyproject.toml",
  ],
  [
    "/some/wd/pyproject.toml",
  ],
]
`;

exports[`with overridden flags > pyproject.toml bad toml > fs.readFileSync 1`] = `
[
  [
    "/some/wd/pyproject.toml",
    "utf8",
  ],
]
`;

exports[`with overridden flags > pyproject.toml bad toml > process.chdir 1`] = `
[
  [
    "/some/wd/is/deep",
  ],
]
`;

exports[`working-directory > relative paths > command.issueCommand 1`] = `
[
  [
    "error",
    {
      "col": 1,
      "file": "file1.py",
      "line": 1,
    },
    "some error",
  ],
]
`;

exports[`working-directory > relative paths > core.error 1`] = `[]`;

exports[`working-directory > relative paths > core.info 1`] = `
[
  [
    "pyright 1.1.240, node v20.8.1, pyright-action 1.1.0",
  ],
  [
    "Working directory: /some/wd",
  ],
  [
    "Running: /path/to/node /path/to/pyright/dist/index.js --outputjson",
  ],
  [
    "/some/wd/file1.py:1:1 - error: some error",
  ],
  [
    "1 error, 0 warnings, 0 informations",
  ],
]
`;

exports[`working-directory > relative paths > core.setFailed 1`] = `
[
  [
    "1 error",
  ],
]
`;

exports[`working-directory > relative paths > core.warning 1`] = `[]`;

exports[`working-directory > relative paths > cp.spawnSync 1`] = `
[
  [
    "/path/to/node",
    [
      "/path/to/pyright/dist/index.js",
      "--outputjson",
    ],
    {
      "encoding": "utf8",
      "maxBuffer": 104857600,
      "stdio": [
        "ignore",
        "pipe",
        "inherit",
      ],
    },
  ],
]
`;

exports[`working-directory > relative paths > fs.existsSync 1`] = `[]`;

exports[`working-directory > relative paths > fs.readFileSync 1`] = `[]`;

exports[`working-directory > relative paths > process.chdir 1`] = `
[
  [
    "/some/wd",
  ],
]
`;
